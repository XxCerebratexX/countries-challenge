{"version":3,"sources":["apiController.js"],"names":["countries","_nodeFetch","_interopRequireDefault","require","headers","method","credentials","Content-Type","getCountriesList","restCall","regeneratorRuntime","async","_context","prev","next","awrap","then","response","ok","res","json","resp","err","error","sent","exports","stop","getCountryInfo","value","_context2","concat","abrupt"],"mappings":"6KAAA,IAEIA,UAFJC,WAAAC,uBAAAC,QAAA,mHAGA,IAAMC,QAAU,CACZC,OAAQ,MACRC,YAAa,cACbF,QAAS,CACLG,eAAgB,qBAIxB,SAAeC,mBAAf,IAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAE,KAAA,EAAAJ,mBAAAK,OATA,EAAAd,WAAA,SAAA,qCAAAG,SAYSY,KAAK,SAAAC,GAXD,GAAGA,EAAAC,GAGH,OAAAD,EAHG,MAAAA,IAAhBD,KAAA,SAAAG,GAAA,OAAAA,EAAAC,SAmBSJ,KAAK,SAAAK,GAXCb,OAAAA,IATf,MASA,SAAAc,GAAA,OAAAA,EAAAF,SAAAJ,KAAA,SAAAO,GAAA,OAAAA,KAAA,KAAA,EATIvB,EASJY,EAAAY,KAAAC,QAAAzB,UAAAA,UAAAS,EAAAQ,SAAA,KAAA,EAAA,IAAA,MAAA,OAAAL,EAAAc,UAAA,SAAAC,eAAAC,GAAA,IAAAnB,EAAA,OAAAC,mBAAAC,MAAA,SAAAkB,GAAA,OAAA,OAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,KAAA,EAAA,OAAAe,EAAAf,KAAA,EAAAJ,mBAAAK,OAIyB,EAAAd,WAAA,SAAA,iDAAA6B,OAAKF,GAAAxB,SACdY,KAAA,SAAAC,GACH,GAFDA,EAEOC,GAIVF,OAAKC,EAHE,MAAOA,IALED,KAShBA,SAAAA,GAAK,OAAAG,EAAAC,SACFJ,KAAA,SAAAK,GAAA,OAAOA,IARM,MAFA,SAAAC,GAAA,OAWRA,EAAAF,SAAAE,KAAG,SAAAC,GAAA,OAAAA,KAbpB,KAAA,EAAA,OAIYd,EAJZoB,EAAAL,KAAAK,EAAAE,OAAA,SAaoBtB,GAbpB,KAAA,EAAA,IAAA,MAAA,OAAAoB,EAAAH","file":"apiController.min.js","sourcesContent":["import fetch from \"node-fetch\";\r\n\r\nlet countries;\r\nconst headers = {\r\n    method: \"GET\",\r\n    credentials: 'same-origin',\r\n    headers: {\r\n        'Content-Type': 'application/json'\r\n    }\r\n};\r\n\r\nasync function getCountriesList() {\r\n\r\n    let restCall = await fetch('http://localhost:8003/getCountries', headers)\r\n        .then(response => {\r\n            if (!response.ok) {\r\n                throw response;\r\n            } else {\r\n                return response;\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(resp => {\r\n            return resp;\r\n        }).catch(err => err.json()).then(error => error);\r\n\r\n    countries = restCall.response;\r\n}\r\n\r\nasync function getCountryInfo(value) {\r\n\r\n    let restCall = await fetch(`http://localhost:8003/getCountriesbyName?name=${value}`, headers)\r\n        .then(response => {\r\n            if (!response.ok) {\r\n                throw response;\r\n            } else {\r\n                return response;\r\n            }\r\n        }).then(res => res.json())\r\n        .then(resp => resp)\r\n        .catch(err => err.json()).then(error => error);\r\n    return restCall;\r\n\r\n}\r\nexport { countries, getCountriesList, getCountryInfo }"]}