{"version":3,"sources":["apiController.js"],"names":["countries","headers","method","credentials","getCountriesList","then","response","ok","res","json","resp","err","error","restCall","getCountryInfo","value","createCard","array","forEach","el","console","log","DOMObject","document","createElement","setAttribute","heading","innerText","name","appendChild","info","region","innerHTML","population","currencies","map","currency","symbol","code","languages","language","nativeName","getElementById"],"mappings":"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","sourcesContent":["import fetch from \"node-fetch\";\r\n\r\nlet countries;\r\nconst headers = {\r\n    method: \"GET\",\r\n    credentials: 'same-origin',\r\n    headers: {\r\n        'Content-Type': 'application/json'\r\n    }\r\n};\r\n\r\nasync function getCountriesList() {\r\n\r\n    let restCall = await fetch('http://localhost:8003/getCountries', headers)\r\n        .then(response => {\r\n            if (!response.ok) {\r\n                throw response;\r\n            } else {\r\n                return response;\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(resp => {\r\n            return resp;\r\n        }).catch(err => err.json()).then(error => error);\r\n\r\n    countries = restCall.response;\r\n}\r\n\r\nasync function getCountryInfo(value) {\r\n\r\n    let restCall = await fetch(`http://localhost:8003/getCountriesbyName?name=${value}`, headers)\r\n        .then(response => {\r\n            if (!response.ok) {\r\n                throw response;\r\n            } else {\r\n                return response;\r\n            }\r\n        }).then(res => res.json())\r\n        .then(resp => resp)\r\n        .catch(err => err.json()).then(error => error);\r\n    return restCall;\r\n\r\n}\r\n\r\nfunction createCard(array) {\r\n    array.forEach(el => {\r\n                console.log(el)\r\n                let DOMObject = document.createElement('div');\r\n                DOMObject.setAttribute('class', 'country-card');\r\n                let heading = document.createElement('h2')\r\n                heading.innerText = el.name;\r\n                DOMObject.appendChild(heading);\r\n\r\n                let info = document.createElement('div');\r\n                info.setAttribute('class', 'country-info');\r\n\r\n                let region = document.createElement('div');\r\n                region.setAttribute('class', 'region');\r\n                region.innerHTML = `<div class=\"region\"><span>Region: ${el.region}</span></div>`\r\n\r\n                let population = document.createElement('div');\r\n                population.setAttribute('class', 'population');\r\n                population.innerHTML = `<div class=\"population\"><span>Population: ${el.population}</span></div>`\r\n\r\n                let currencies = document.createElement('ul');\r\n                currencies.setAttribute('class', 'currency');\r\n                currencies.innerHTML = el.currencies.map(currency => {\r\n                    return ` Currency(ies)\r\n                <li>Symbol: ${currency.symbol}</li> \r\n                <li>Code: ${currency.code} </li> \r\n                <li>Name: ${currency.name} </li>`\r\n                });\r\n\r\n                let languages = document.createElement('ul');\r\n                languages.setAttribute('class', 'language');\r\n                languages.innerHTML = `Language(s): ${el.languages.map(language => {\r\n            return `<li> ${language.nativeName} </li>`\r\n        })}`\r\n\r\n        info.appendChild(region);\r\n        info.appendChild(currencies);\r\n        info.appendChild(languages);\r\n        info.appendChild(population);\r\n\r\n        DOMObject.appendChild(info);\r\n        document.getElementById('main-body').appendChild(DOMObject);\r\n    })\r\n}\r\nexport { countries, getCountriesList, getCountryInfo, createCard }"],"file":"apiController.dev.js"}